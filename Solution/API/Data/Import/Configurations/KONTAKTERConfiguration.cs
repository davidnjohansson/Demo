// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using API.Data.Import;
using API.Data.Import.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace API.Data.Import.Configurations
{
    public partial class KONTAKTERConfiguration : IEntityTypeConfiguration<KONTAKTER>
    {
        public void Configure(EntityTypeBuilder<KONTAKTER> entity)
        {
            entity.HasKey(e => e.PK);

            entity.HasIndex(e => e.FK_KUNDER, "_dta_index_KONTAKTER_5_494624805__K3_1_2_4_5_6_7");

            entity.Property(e => e.Aktiv)
                .IsRequired()
                .HasDefaultValueSql("((1))");

            entity.Property(e => e.Avdelning)
                .HasMaxLength(8000)
                .IsUnicode(false);

            entity.Property(e => e.GDPR_Raderad)
                .HasMaxLength(8000)
                .IsUnicode(false);

            entity.Property(e => e.KontaktNamn)
                .HasMaxLength(8000)
                .IsUnicode(false);

            entity.HasOne(d => d.FK_KUNDERNavigation)
                .WithMany(p => p.KONTAKTER)
                .HasForeignKey(d => d.FK_KUNDER)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_KONTAKTER_KUNDER");

            entity.HasOne(d => d.FK_PERSONERNavigation)
                .WithMany(p => p.KONTAKTER)
                .HasForeignKey(d => d.FK_PERSONER)
                .HasConstraintName("FK_KONTAKTER_PERSONER");

            entity.HasMany(d => d.FK_ARBETSPLATSER)
                .WithMany(p => p.FK_KONTAKTER)
                .UsingEntity<Dictionary<string, object>>(
                    "KONTAKTER_ARBETSPLATSER",
                    l => l.HasOne<ARBETSPLATSER>().WithMany().HasForeignKey("FK_ARBETSPLATSER").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_KONTAKTER_ARBETSPLATSER_ARBETSPLATSER"),
                    r => r.HasOne<KONTAKTER>().WithMany().HasForeignKey("FK_KONTAKTER").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_KONTAKTER_ARBETSPLATSER_KONTAKTER"),
                    j =>
                    {
                        j.HasKey("FK_KONTAKTER", "FK_ARBETSPLATSER");

                        j.ToTable("KONTAKTER_ARBETSPLATSER");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<KONTAKTER> entity);
    }
}
